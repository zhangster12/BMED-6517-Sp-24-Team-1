function [aSig, template] = template(signals, Fs, varargin)

% -------------------------------------------------------------------------
% This function generates a template signal from a signal set using Woody's
% method. Input arguments include:
% signals   [NxM]   Beat-separated signal segments
% Fs                Sampling frequency
% 'maxLag'          (Optional) Maximum lag for x-corr (in percent)
% 'smooth'  Bool    (Optional) Smooth signal discontinuities?
%
% In Woody's method, the first signal is used as the initial template.  The
% second signal is then aligned with the first template using the maximal
% cross-correlation, and a new template is generated by averaging the
% aligned signals. This process is repeated with the rest of the signal
% segments, until aligned segments and a robust template are generated.
%
% See:
% C.  D.  Woody,  "Characterization  of  an  adaptive  filter  for  the 
% analysis of variable latency neuroelectric signals," Med. Biol. Eng., 
% vol. 5, no. 6, pp. 539-554, Nov. 1967.
% -------------------------------------------------------------------------

% Parse optional arguments:
if ~isempty(varargin)
    for arg = 1:length(varargin)
        if strcmp(varargin{arg}, 'maxlag'); maxlag = varargin{arg + 1};
        elseif strcmp(varargin{arg}, 'smooth'); smooth = varargin{arg + 1};
        end
    end
end

% Set defaults
if ~exist('maxlag', 'var'); maxlag = 1.0; end
if ~exist('smooth', 'var'); smooth = true; end

% Normalize signals
sig = normalize(signals);

% Set initial values
template = zeros(size(sig));    % Placeholder for templates
aSig = zeros(size(sig));        % Placeholder for aligned signals
aSig = sig(:, 1);               % First aligned signal is first signal
template(:, 1) = sig(:, 1);     % Initial template value is first signal
c = 2;                          % Initialize counter

while c <= size(signals, 2)
    
    % Align the signal and template
    [aSig(:, c), ~, ~, ~] = cardio.general.alignSignals(sig(:, c), ...
        template(:, c-1), Fs, false, 'maxlag', maxlag, 'method', 'pad', ...
        'modify', 'consistent');
    
    % Smooth the signal if indicated
    if smooth
        aSig(:, c) = movmean(aSig(:, c), 10);
    end
    
    % Generate the updated template by averaging the aligned signals
    template(:, c) = mean(aSig(:, 1:c), 2);
    
    % Increment counter
    c = c + 1;
    
end

end

